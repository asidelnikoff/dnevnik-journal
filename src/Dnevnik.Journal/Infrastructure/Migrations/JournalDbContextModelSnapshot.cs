// <auto-generated />
using System;
using Dnevnik.Journal.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Dnevnik.Journal.Infrastructure.Migrations
{
    [DbContext(typeof(JournalDbContext))]
    partial class JournalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dnevnik.Journal.Dal.Models.UserMarks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamptz")
                        .HasColumnName("created_at");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uuid")
                        .HasColumnName("lesson_id");

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mark");

                    b.Property<string>("Subject")
                        .HasColumnType("text")
                        .HasColumnName("subject");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamptz")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_marks");

                    b.HasIndex(new[] { "CreatedAt" }, "ix_user_marks_created_at")
                        .HasDatabaseName("ix_user_marks_created_at");

                    b.HasIndex(new[] { "LessonId" }, "ix_user_marks_lesson_id")
                        .HasDatabaseName("ix_user_marks_lesson_id");

                    b.HasIndex(new[] { "Subject" }, "ix_user_marks_subject")
                        .HasDatabaseName("ix_user_marks_subject");

                    b.HasIndex(new[] { "UserId" }, "ix_user_marks_user_id")
                        .HasDatabaseName("ix_user_marks_user_id");

                    b.ToTable("user_marks", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
